#!/usr/bin/env ruby

require 'optparse'
require 'autotune'

options = { album: nil, artist: nil, directory: nil, deluxe: false }
ARGV << '--help' if ARGV.empty?

overview_msg = 'OVERVIEW: A music auto-tagging program using the iTunes & Spotify API'
usage_msg    = 'USAGE: autotune [options] <inputs>'
options_msg  = 'OPTIONS:'

option_parser = OptionParser.new do |opts|
  opts.banner = overview_msg + "\n\n" + usage_msg + "\n\n" + options_msg + "\n"

  album_help_msg = 'Pass in album Name as argument'
  opts.on('-a', '--album <album>', album_help_msg) do |album|
    options[:album] = album.to_s
  end

  artist_help_msg = 'Pass in artist name as argument'
  opts.on('-s', '--artist <artist>', artist_help_msg) do |artist|
    options[:artist] = artist.to_s
  end

  deluxe_help_msg = 'Use deluxe version of album, if applicable'
  opts.on('-x', '--deluxe', deluxe_help_msg) do |deluxe|
    options[:deluxe] = true unless deluxe.nil?
  end

  directory_help_msg = 'Pass in the directory path as argument'
  opts.on('-d', '--directory <directory>', directory_help_msg) do |directory|
    unless File.exist?(File.expand_path(directory.to_s))
      abort 'autotune: error: directory path does not exist'
    end
    options[:directory] = File.expand_path(directory.to_s)
  end

  opts.on('-h', '--help', 'Displays available options') do
    puts opts
    exit
  end

  opts.on('-v', '--version', 'Displays the version number') do
    puts 'autotune version ' + AutoTune::VERSION
    exit
  end
end

begin
  option_parser.parse!
rescue OptionParser::InvalidOption
  abort 'autotune: error: invalid option(s)'
end

options.each do |_option, argument|
  abort 'autotune: error: too few arguments' if argument.nil?
end

paths  = AutoTune::Util.paths(options[:directory])
artist = options[:artist]
album  = options[:album]

album_tags = AutoTune::Obtainer.get_tags(album, artist)

paths.each do |path|
  track_number = AutoTune::Obtainer.get_track_number(path)

  until track_number > 0
    print "Please enter the track number for #{File.basename(path)}: "
    track_number = STDIN.gets.chomp.to_i
  end

  puts AutoTune::Util.parse(options[:directory], track_number)
end

system('rm ~/Desktop/itunes_tags.json')
